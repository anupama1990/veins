[General]
debug-on-errors = true
cmdenv-express-mode = true
image-path = ../../../../images
sim-time-limit = 280s # this limit is currently necessary as at around 300s the number of persons is decreasing
**.statistic-recording = false
repeat = 50

# VeinsInetManager
*.manager.updateInterval = 0.5s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.autoShutdown = true
*.manager.launchConfig = xmldoc("hochschule_muenchen.launchd.xml")
# there is no vehicle named vtype in this scenario. just here as an example of how to do it when you have vehicles and pedestrians
*.manager.moduleType = "vtype=org.car2x.veins.subprojects.veins_inet.VeinsInetCar pedestrian=org.car2x.veins.subprojects.veins_inet.VeinsInetPerson"
*.manager.moduleName = "vtype=carNode pedestrian=personNode"
*.manager.moduleDisplayString = "vtype='i=veins/node/car;is=vs' pedestrian='i=veins/node/pedestrian;is=vs'"
*.manager.maximumNumberOfModules = 200
*.manager.penetrationRate = ${N=0.05..1.0 step 0.05} # use 20 different params
# VeinsInetMobility
*.*Node[*].mobility.typename = "VeinsInetMobility"

# radio medium for both configs
*.radioMedium.pathLoss.typename = "LogNormalShadowing"

[Config ICNConfig]
network = org.car2x.veins.subprojects.veins_inet.example.ScenarioPedestrians

*.manager.activePersonsStatistic.statistic-recording = true

*.personNode[*].subscribeTo = "/example/testData/*"

*.publisher.firstMessageTimestamp = 100s
*.publisher.messageDelay = 120s
*.publisher.repeatPublications = false
*.publisher.icnPublicationName = "/example/testData"
*.publisher.publicationSize = 500B

**.ipv4.arp.typename = "GlobalArp"

# -----------------------------------------------------------------------------------------------------------------------------

[Config ClassicConfig]
network = org.car2x.veins.subprojects.veins_inet.example.ScenarioPedestriansClassic

*.manager.activePersonsStatistic.statistic-recording = true
*.manager.moduleType = "vtype=org.car2x.veins.subprojects.veins_inet.VeinsInetCar pedestrian=org.car2x.veins.subprojects.veins_inet.VeinsInetPersonClassic"

# configure the publisher
*.publisher.numApps = 1
*.publisher.app[0].typename = "EventNotificationPublisher"
*.publisher.app[0].publicationName = "/example/testData"
*.publisher.app[0].repeat = false
# same values as icn 
*.publisher.app[0].delay = 120s	
*.publisher.app[0].startTime = 100s

# configure the persons
# app[0] will be the subscription tcp app
*.personNode[*].numApps = 1
*.personNode[*].app[0].typename = "EventNotificationSubscriber"
*.personNode[*].app[0].subscriptionName = "/example/testData/*"
*.personNode[*].app[0].connectAddress = "publisher"
*.personNode[*].app[0].startTime = 85s # start time will be a little earlier than the first event

**.configurator.config = xml("<config> \
								<interface hosts='publisher' names='eth0' address='10.0.0.1' netmask='255.0.0.0'/> \
							</config>")

# need to adapt the transmitter power to that defined in icn scenario
**.radio.transmitter.power = 0.75mW
**.wlan[0].bitrate = 54Mbps
**.wlan[0].radio.typename = "Ieee80211ScalarRadio"

*.personNode[*].ifConfig.interfaces = "wlan0"
*.personNode[*].ifConfig.addressBase = "10.0.0.3"
**.ipv4.arp.typename = "GlobalArp"
