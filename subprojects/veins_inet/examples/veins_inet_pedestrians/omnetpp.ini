[General]
debug-on-errors = true
cmdenv-express-mode = true
image-path = ../../../../images
sim-time-limit = 100s
**.statistic-recording = false



# VeinsInetManager
*.manager.updateInterval = 0.1s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.autoShutdown = true
*.manager.launchConfig = xmldoc("hochschule_muenchen.launchd.xml")
# there is no vehicle named vtype in this scenario. just here as an example of how to do it when you have vehicles and pedestrians
*.manager.moduleType = "vtype=org.car2x.veins.subprojects.veins_inet.VeinsInetCar pedestrian=org.car2x.veins.subprojects.veins_inet.VeinsInetPerson"
*.manager.moduleName = "vtype=carNode pedestrian=personNode"
*.manager.moduleDisplayString = "vtype='i=veins/node/car;is=vs' pedestrian='i=veins/node/pedestrian;is=vs'"

# VeinsInetMobility
*.*Node[*].mobility.typename = "VeinsInetMobility"

[Config ICNConfig]
network = org.car2x.veins.subprojects.veins_inet.example.ScenarioPedestrians

**.app[0].subscriber.dataArrivedStatistic.statistic-recording = true

*.personNode[*].subscribeTo = "/example/testData/*"

*.publisher.firstMessageTimestamp = 40s
*.publisher.messageDelay = 5s
*.publisher.repeatPublications = true
*.publisher.icnPublicationName = "/example/testData"
*.publisher.publicationSize = 1000B

*.accessPoint*.**.displayCommunicationRange = true

# -----------------------------------------------------------------------------------------------------------------------------

[Config ClassicConfig]
network = org.car2x.veins.subprojects.veins_inet.example.ScenarioPedestriansClassic
# disable all statistics that are collected by default from the tcp app used
**.app[0].endToEndDelay.statistic-recording = false
**.app[0].numActiveSessions.statistic-recording = false
**.app[0].numSessions.statistic-recording = false
**.app[0].packetReceived.statistic-recording = false
**.app[0].packetSent.statistic-recording = false

*.manager.moduleType = "vtype=org.car2x.veins.subprojects.veins_inet.VeinsInetCar pedestrian=org.car2x.veins.subprojects.veins_inet.VeinsInetPersonClassic"

*.personNode[*].numApps = 2
*.personNode[*].app[0].typename = "TcpBasicClientAppAdapted"
*.publisher.numApps = 1
*.publisher.app[0].typename = "TcpGenericServerApp"

*.publisher.app[0].localPort = 80

# request length will be 500bytes and reply 1000bytes
*.personNode[*].app[0].replyLength = 1000B
*.personNode[*].app[0].requestLength = 500B

# the tcpapps on the person nodes will keep asking for new data every
# five seconds
*.personNode[*].app[0].idleInterval = 5s
*.personNode[*].app[0].thinkTime = 0s
*.personNode[*].app[0].startTime = 40s
*.personNode[*].app[0].stopTime = 100s
*.personNode[*].app[0].reconnectInterval = 15s
*.personNode[*].app[0].numRequestsPerSession = 1

# port and ip settings
*.personNode[*].app[0].connectAddress = "publisher"
*.personNode[*].app[0].connectPort = 80

*.personNode[*].app[1].typename = "DhcpClient"

**.configurator.config = xml("<config>\
								<interface hosts='gateway' names='eth0' address='192.168.0.1' netmask='255.255.0.0'/> \
								<interface hosts='gateway' names='eth1' address='10.0.0.2' netmask='255.255.255.0'/> \
								<interface hosts='publisher' names='eth0' address='10.0.0.1' netmask='255.255.255.0'/> \
								<interface hosts='dhcpServer' names='eth0' address='192.168.0.2' netmask='255.255.0.0'/> \
							</config>")

*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
**.nodeFilter = "not personNode[*]"

# need to adapt the transmitter power to that defined in icn scenario
*.personNode[*].wlan[0].radio.transmitter.power = 1mW

**.ipv4.arp.typename = "GlobalArp"
