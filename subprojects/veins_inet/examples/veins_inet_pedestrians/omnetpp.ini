[General]
debug-on-errors = true
cmdenv-express-mode = true
image-path = ../../../../images
sim-time-limit = 280s # this limit is currently necessary as at around 300s the number of persons is decreasing
**.statistic-recording = false
repeat = 10

# VeinsInetManager
*.manager.updateInterval = 0.5s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.autoShutdown = true
*.manager.launchConfig = xmldoc("hochschule_muenchen.launchd.xml")
# there is no vehicle named vtype in this scenario. just here as an example of how to do it when you have vehicles and pedestrians
*.manager.moduleType = "vtype=org.car2x.veins.subprojects.veins_inet.VeinsInetCar pedestrian=org.car2x.veins.subprojects.veins_inet.VeinsInetPerson"
*.manager.moduleName = "vtype=carNode pedestrian=personNode"
*.manager.moduleDisplayString = "vtype='i=veins/node/car;is=vs' pedestrian='i=veins/node/pedestrian;is=vs'"
*.manager.maximumNumberOfModules = 200
*.manager.penetrationRate = ${N=0.5..1.0 step 0.5} # use 20 different params
# VeinsInetMobility
*.*Node[*].mobility.typename = "VeinsInetMobility"

[Config ICNConfig]
network = org.car2x.veins.subprojects.veins_inet.example.ScenarioPedestrians

*.manager.activePersonsStatistic.statistic-recording = true

*.personNode[*].subscribeTo = "/example/testData/*"

*.publisher.firstMessageTimestamp = 100s
*.publisher.messageDelay = 120s
*.publisher.repeatPublications = false
*.publisher.icnPublicationName = "/example/testData"
*.publisher.publicationSize = 500B

**.ipv4.arp.typename = "GlobalArp"

# -----------------------------------------------------------------------------------------------------------------------------

[Config ClassicConfig]
network = org.car2x.veins.subprojects.veins_inet.example.ScenarioPedestriansClassic

*.manager.activePersonsStatistic.statistic-recording = true
*.manager.moduleType = "vtype=org.car2x.veins.subprojects.veins_inet.VeinsInetCar pedestrian=org.car2x.veins.subprojects.veins_inet.VeinsInetPersonClassic"

# configure the publisher
*.publisher.numApps = 1
*.publisher.app[0].typename = "EventNotificationPublisher"
*.publisher.app[0].publicationName = "/example/testData"
*.publisher.app[0].repeat = false
# same values as icn 
*.publisher.app[0].delay = 120s	
*.publisher.app[0].startTime = 100s

# configure persons with 2 apps
# app[0] will be the subscription tcp app
*.personNode[*].numApps = 2
*.personNode[*].app[0].typename = "EventNotificationSubscriber"
*.personNode[*].app[0].subscriptionName = "/example/testData/*"
*.personNode[*].app[0].connectAddress = "publisher"
*.personNode[*].app[0].startTime = 85s + intuniform(0s, 5s) # start time will be a little earlier than the first event

# app[1] will be the dhcp client requesting ip addresses
*.personNode[*].app[1].typename = "DhcpClient"

**.configurator.config = xml("<config>\
								<interface hosts='gateway' names='eth0' address='192.168.0.1' netmask='255.255.0.0'/> \
								<interface hosts='gateway' names='eth1' address='10.0.0.2' netmask='255.255.255.0'/> \
								<interface hosts='publisher' names='eth0' address='10.0.0.1' netmask='255.255.255.0'/> \
								<interface hosts='dhcpServer' names='eth0' address='192.168.0.2' netmask='255.255.0.0'/> \
							</config>")

*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
**.nodeFilter = "not personNode[*]"

# need to adapt the transmitter power to that defined in icn scenario
**.radio.transmitter.power = 1mW

**.ipv4.arp.typename = "GlobalArp"
