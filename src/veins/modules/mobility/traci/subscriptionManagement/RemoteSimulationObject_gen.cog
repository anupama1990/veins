//
// Copyright (C) 2019 Stefan Schuhbaeck <stefan.schuhbaeck@hm.edu>
//
// Documentation for these modules is at http://veins.car2x.org/
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//

// This file is generated using `cog` program. Don not modify manually. Use RemoteSimulationObject_gen.cog. 

#include <veins/modules/mobility/traci/subscriptionManagement/RemoteSimulationObject.h>
#include "veins/modules/mobility/traci/TraCIConstants.h"


namespace veins {
namespace TraCISubscriptionManagement {

/*[[[cog
import cog, re
prog=re.compile('^const\\s+uint8_t\\s+(?P<var>(VAR|ID).*)\\s+=\\s+(?P<val>0x[0-9,a-f]{2})\\s*;')
data=[]
with open("../TraCIConstants.h", 'r') as f:
	for line in f:
		ret = prog.match(line)
		if ret:
			data.append(f'\t{{"{ret["var"]}", TraCIConstants::{ret["var"]}}},')
		

cog.outl("const std::map<std::string, uint8_t> RemoteSimulationObject::varLookup = {")
if len(data) > 0:
	for d in data:
		cog.outl(d)
else:
	cog.outl('{"", 0x00},')
cog.outl('};')
]]]*/

//[[[end]]]



} // end namespace TraCISubscriptionManagement
} //